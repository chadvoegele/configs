# functions
function open_file_or_dir() {
  if [[ $# -eq 0 ]]; then
    gls --color=auto;
  elif [[ $# -eq 1 && -d $1 ]]; then
    builtin cd $1;
  else
    open_file $@;
  fi
}

smart_sudo () {
    if [[ $# -gt 0 ]]; then
      # bad fix for open_file_or_dir. fix when understand zsh fns with sudo
      if [[ $1 = "o" ]]; then
        sudo open_file $argv[2,-1]
      else
        #test if the first parameter is a alias
        if [[ -n $aliases[$1] ]]; then
            #if so, substitute the real command
            sudo ${=aliases[$1]} $argv[2,-1]
        else
            #else just run sudo as is
            sudo $argv
        fi
      fi
    else
        #if no parameters were given, then assume we want a root shell
        sudo -s
    fi
}

function get_pass() {
  if [[ $# -eq 0 || ($# -eq 1 && ${argv[1]} == "-h") ]]; then
    echo -e "usage: gp pass_regex"
  else
    perl -I ~/docs/passwds ~/docs/passwds/get_pass.pl ~/docs/passwds/keypass.kdb "$argv"
  fi
}

function quick_cd() {
. $(which set_cd_map.sh)

if (( ! ${+CD_MAP} )); then
  echo "CD_MAP not set!"
  return 1
fi

if [[ $# -ne 1 ]]; then
  echo "Usage: quick_cd [directory abbreivation]"
  return 1
fi

if (( ! ${+CD_MAP["$1"]} )); then
  echo "No directory for $1"
  return 1
fi

cd "${CD_MAP[\"$1\"]}"
return 0
}

#aliases
alias -g D='&> /dev/null &!'

alias ls='gls --color=auto'
alias l='gls --color=auto'
alias alsamixer='alsamixer -g'
alias rp='PATH=$PATH'
alias mv='mv -i'
alias cp='cp -i'
alias la='ls -a'
alias ll='ls -l'
alias sl='ls'
alias md='mkdir -p'
alias sudo='sudo ' # this makes sudo use local aliases
alias s='smart_sudo'
alias grep='grep -i'
alias o=open_file_or_dir
alias el='vim -c "set filetype=ledger" ~/docs/money/ledger/ledger_2016.txt'
alias gp=get_pass
alias qc=quick_cd
alias g='open_firefox.py'
alias v='vim'
