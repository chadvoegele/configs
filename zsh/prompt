# PS1 and PS2
export PS1="$(print '%{\e[1;30m%}%n%{\e[0m%}'):$(print '%{\e[0;34m%}%~%{\e[0m%}')$ "
export PS2="$(print '%{\e[0;34m%}>%{\e[0m%}')"

## OLD---------------------------
# function zle-keymap-select {
  # prompt_adam2_precmd
  # zle reset-prompt
# }
# zle -N zle-keymap-select

# function zle-line-init {
  # prompt_adam2_precmd
# }
# zle -N zle-line-init

prompt_adam2_setup () {
  # Some can't be local
  local prompt_gfx_tlc prompt_gfx_mlc prompt_gfx_blc

  prompt_gfx_tlc='.'
  prompt_gfx_mlc='|'
  prompt_gfx_blc='`'
  prompt_gfx_hyphen='-'

  # Colour scheme
  autoload -U colors; colors
  prompt_adam2_color1=${1:-$fg[black]}    # hyphens
  prompt_adam2_color2=${2:-$fg[red]}   # current directory
  prompt_adam2_color3=${3:-$fg[cyan]}    # user@host
  prompt_adam2_color4=${4:-$fg[black]}   # user input
  prompt_adam2_color5=${5:-$fg[black]}

  prompt_gfx_tbox="%B%F$prompt_adam2_color1${prompt_gfx_tlc}%b%F$prompt_adam2_color1"
  prompt_gfx_bbox="%B%F$prompt_adam2_color1${prompt_gfx_blc}%b%F$prompt_adam2_color1"

  # This is a cute hack.  Well I like it, anyway.
  # prompt_gfx_bbox_to_mbox=$'%{\e[A\r'"%}%B%F$prompt_adam2_color1${prompt_gfx_mlc}%b%F$prompt_adam2_color1${prompt_gfx_hyphen}%{"$'\e[B%}'
  prompt_gfx_bbox_to_mbox=$'%{\r'"%}%B%F$prompt_adam2_color1${prompt_gfx_mlc}%b%F$prompt_adam2_color1${prompt_gfx_hyphen}%{"$'%}'

  prompt_l_paren="%B%F{black}("
  prompt_r_paren="%B%F{black})"

  prompt_user_host="%b%F$prompt_adam2_color3%n%B%F$prompt_adam2_color3@%b%F$prompt_adam2_color3%m"

  prompt_line_1a="$prompt_gfx_tbox$prompt_l_paren%B%F$prompt_adam2_color2%~$prompt_r_paren%b%F$prompt_adam2_color1"
  prompt_line_1b="$prompt_l_paren$prompt_user_host$prompt_r_paren%b%F$prompt_adam2_color1"

  prompt_line_2="$prompt_gfx_bbox${prompt_gfx_hyphen}%B%F{white}"

  prompt_char="%(!.#.>)"

  prompt_opts=(cr subst percent)

  prompt_newline=$'%1(l.\n.)'

  # To manipulate precmd and preexec hooks...
  autoload -Uz add-zsh-hook

  add-zsh-hook precmd prompt_adam2_precmd
}

prompt_adam2_precmd() {
  setopt noxtrace localoptions extendedglob
  local prompt_line_1

  prompt_normal_mode="   "
  prompt_insert_mode=$prompt_adam2_color3"INS"
  if [[ -z $KEYMAP ]]; then
    prompt_vim_status=$prompt_insert_mode;
  else
    prompt_vim_status="${${KEYMAP/vicmd/$prompt_normal_mode}/(main|viins)/$prompt_insert_mode}";
  fi
  prompt_line_2="${prompt_gfx_bbox}$prompt_vim_status%B%F$prompt_adam2_color5"

  prompt_adam2_choose_prompt

  PS1="$prompt_line_1$prompt_newline$prompt_line_2%B%F$prompt_adam2_color5$prompt_char %b%f%k"
  PS2="$prompt_line_2$prompt_gfx_bbox_to_mbox%B%F$prompt_adam2_color5> %b%f%k"
  PS3="$prompt_line_2$prompt_gfx_bbox_to_mbox%B%F$prompt_adam2_color5?# %b%f%k"
  zle_highlight[(r)default:*]="default:fg=$prompt_adam2_color4"
}

prompt_adam2_choose_prompt () {
  # this should be cleaned up. the first line from original code
  # next removes %F and next remove escape color codes, probably redudant
  local prompt_line_1a_width=${(S)prompt_line_1a//(\%([KF1]|)\{*\}|\%[Bbkf])}
  prompt_line_1a_width=${(S)prompt_line_1a_width//(\%F)}
  prompt_line_1a_width=${(S)prompt_line_1a_width//$'\e'\[3*m}
  prompt_line_1a_width=${#${(S%%)prompt_line_1a_width}}

  local prompt_line_1b_width=${(S)prompt_line_1b//(\%([KF1]|)\{*\}|\%[Bbkf])}
  prompt_line_1b_width=${(S)prompt_line_1b_width//(\%F)}
  prompt_line_1b_width=${(S)prompt_line_1b_width//$'\e'\[3*m}
  prompt_line_1b_width=${#${(S%%)prompt_line_1b_width}}

  local prompt_padding_size=$(( COLUMNS
                                  - prompt_line_1a_width
                                  - prompt_line_1b_width ))

  # Try to fit in long path and user@host.
  if (( prompt_padding_size > 0 )); then
    local prompt_padding
    eval "prompt_padding=\${(l:${prompt_padding_size}::${prompt_gfx_hyphen}:)_empty_zz}"
    prompt_line_1="$prompt_line_1a$prompt_padding$prompt_line_1b"
    return
  fi

  prompt_padding_size=$(( COLUMNS - prompt_line_1a_width ))

  # Didn't fit; try to fit in just long path.
  if (( prompt_padding_size > 0 )); then
    local prompt_padding
    eval "prompt_padding=\${(l:${prompt_padding_size}::${prompt_gfx_hyphen}:)_empty_zz}"
    prompt_line_1="$prompt_line_1a$prompt_padding"
    return
  fi

  # Still didn't fit; truncate 
  local prompt_pwd_size=$(( COLUMNS - 5 ))
  prompt_line_1="$prompt_gfx_tbox$prompt_l_paren%B%F$prompt_adam2_color2%$prompt_pwd_size<...<%~%<<$prompt_r_paren%b%F$prompt_adam2_color1$prompt_gfx_hyphen"
}

# prompt_adam2_setup "$@"


# .(chad:~/inc/videos)---------------------------------------------------------
# `INS>
#
# .(chad:~/inc/videos)---------------------------------------------------------
# `--->
