# functions
function open_file_or_dir() {
  if [[ $# -eq 0 ]]; then
    ls --color=auto;
  elif [[ $# -eq 1 && -d $1 ]]; then
    builtin cd $1;
  else
    open_file $@;
  fi
}

smart_sudo () {
    if [[ $# -gt 0 ]]; then
      # bad fix for open_file_or_dir. fix when understand zsh fns with sudo
      if [[ $1 = "o" ]]; then
        sudo open_file $argv[2,-1]
      else
        #test if the first parameter is a alias
        if [[ -n $aliases[$1] ]]; then
            #if so, substitute the real command
            sudo ${=aliases[$1]} $argv[2,-1]
        else
            #else just run sudo as is
            sudo $argv
        fi
      fi
    else
        #if no parameters were given, then assume we want a root shell
        sudo -s
    fi
}

#aliases
alias -g D='&> /dev/null &!'
alias -g L=' | less'

alias -s pdf=evince

alias ls='ls --color=auto'
alias l='ls --color=auto'
alias alsamixer='alsamixer -g'
alias rp='PATH=$PATH'
alias mv='mv -i'
alias cp='cp -i'
alias la='ls -a'
alias ll='ls -l'
alias sl='ls'
alias md='mkdir -p'
alias sudo='sudo ' # this makes sudo use local aliases
alias s='smart_sudo'
alias grep='grep -i'
alias arst='arst.sh'
alias asdf='asdf.sh'
alias nc='/usr/bin/netcfg'
alias o=open_file_or_dir
alias el='vim -c "set filetype=ledger" /home/chad/Dropbox/docs/money/ledger/chad_ledger_2013.txt'
alias dirs='dirs -v'

# open multiple tabs in vim
alias vim='vim -p'
alias v='vim -p'

#mkdir cd
mdcd() { mkdir -p "$1" && cd "$1" }

#mv cd
mvcd() { mv -i "$1" "$2" && cd "$2" }

#cp cd
cpcd() { cp -i "$1" "$2" && cd "$2" }

#scp resume
alias scpresume='rsync -partial -progress --rsh=ssh'

